(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";exports.promise={name:"promise",of:function(n){return function(t){return t(n)}},map:function(n,t){return function(u){t(function(t){return u(n(t))})}},flat:function(n,t){return function(u){n(function(n){t.map(function(r){r(function(r){u(t.map(function(){return r},n))})},n)})}}};

},{}],2:[function(require,module,exports){
"use strict";exports.id={name:"ID",of:function(n){return{idVal:n}},chain:function(n,t){return t.chain(function(t){return n(t.idVal)})},lift:function(n){return n.chain(function(t){return n.of({idVal:t})})}},exports.maybe={name:"Maybe",of:function(n){return{maybeVal:n}},chain:function(n,t){return t.chain(function(t){return void 0===t.maybeVal?t:n(t.maybeVal)})},lift:function(n){return n.chain(function(t){return n.of({maybeVal:t})})},nothing:function(){return{maybeValue:void 0}},get:function(n,t){return{maybeVal:t[n]}}},exports.list={name:"list",of:function(n){return console.log(n),n.constructor===Array?n:[n]},chain:function(n,t,r){return r.chain(function(t){return t.reduce(function(t,r){return t.concat(n(r))})},t,r.inner)}};

},{}],3:[function(require,module,exports){
"use strict";exports.prim=require("./prim"),exports.data=require("./data"),exports.comp=require("./comp");var idProto={of:function(n){return n},chain:function(n){return n(this._value)}},unwrap=function(n){if(!n.hasOwnProperty("_value"))throw JSON.stringify(n)+" is not a wrapped value";return n._value},wrapIn=function(n,r){var t=Object.create(n);return t._value=r,Object.freeze(t)};exports.make=function(n,r){function t(n){return wrapIn(i,n)}var e={of:n.of,chain:function(r){return n.chain(r,wrapIn(idProto,this._value))}},i={prototype:i,chain:function(n){var i=function(r){return unwrap(n(r))};return t(r.chain(i,wrapIn(e,this._value)))},of:function(e){return t(n.of(r.of(e)))},map:function(n){var r=this;return this.chain(function(t){return r.of(n(t))})}},u=i["lift"+n.name]=function(n){return t(r.lift(wrapIn(e,n)))},a=i["lift"+r.name]=function(r){return t(n.of(r))};i["chain"+r.name]=function(n){return this.chain(function(r){return a(n(r))})},i["chain"+n.name]=function(n){return this.chain(function(r){return u(n(r))})};var o=function(n){Object.keys(n).filter(function(n){return"of"!==n&&"chain"!==n&&"lift"!==n}).forEach(function(r){i[r]=function(){var t=Array.prototype.slice.call(arguments);return this.chain(function(e){return t.push(e),i["lift"+n.name](n[r].apply(null,t))})}})};return o(n),o(r),i[r.name]=r,i[n.name]=n,t.of=i.of,t["lift"+n.name]=i["lift"+n.name],t["lift"+r.name]=i["lift"+r.name],t};

},{"./comp":1,"./data":2,"./prim":4}],4:[function(require,module,exports){
"use strict";

},{}]},{},[1,2,3,4])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
