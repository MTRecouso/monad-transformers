(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";exports.promise={name:"promise",of:function(n){return function(t){return t(n)}},map:function(n,t){return function(u){t(function(t){return u(n(t))})}},flat:function(n,t){return function(u){n(function(n){t.map(function(r){r(function(r){u(t.map(function(){return r},n))})},n)})}}};

},{}],2:[function(require,module,exports){
"use strict";exports.id={name:"id",of:function(a){return{idVal:a}},map:function(a,n){return{idVal:a(n.idVal)}},flatMap:function(a,n,e){return e.flatMap(function(n){return a(n.idVal)},n,e.inner)}},exports.maybe={name:"maybe",of:function(a){return{maybeVal:a}},map:function(a,n){return{maybeVal:void 0===n.maybeVal?n.maybeVal:a(n.maybeVal)}},flatMap:function(a,n,e){return e.flatMap(function(n){return void 0===n.maybeVal?n.maybeVal:a(n.maybeVal)},n,e.inner)}};

},{}],3:[function(require,module,exports){
"use strict";exports.prim=require("./prim"),exports.data=require("./data"),exports.comp=require("./comp");var id={of:function(r){return r},map:function(r,t){return r(t)},flatMap:function(r,t){return r(t)}};exports.make=function(r,t){function n(r){var t=Object.create(u);return t._value=r,t}function e(e){return n(t.of(r.of(e)))}r.inner=t,t.inner=id;var u={map:function(e){return n(t.map(function(t){return r.map(e,t)},this._value))},flatMap:function(e){var u=function(r){return e(r)._value};return n(r.flatMap(u,this._value,t))}};return e.prototype=u,e},exports.print=function(r){return console.log(r),r};

},{"./comp":1,"./data":2,"./prim":4}],4:[function(require,module,exports){
"use strict";exports.list={name:"list",of:function(n){return n.constructor===Array?n:[n]},map:function(n,r){return r.map(n)},flatMap:function(n,r,t){return r.reduce(function(n,r){return t.funk(r)},[])},flat:function(n,r){return n.reduce(function(n,t){for(var u=-1,e=!1;!e;)n.push(r.map(function(n){return u++,u-1===n.length&&(e=!0),n[u]},t));return n},[])}};

},{}]},{},[1,2,3,4])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
